package library;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import dbworker.DBWorker;

public class Library {
	private String insert = "INSERT INTO users (name, author) VALUES(?,?)";
	private String select = "select * from users where name = ?";
	private String selectAll = "select * from users";
	
	private DBWorker worker;
	private PreparedStatement preparedStatement;
	private ResultSet resultSet;
	Statement statement;
	
	public Library() {
		worker = new DBWorker();
		try {
			statement = worker.getConnection().createStatement();
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Fail connection");
		}
	}
	
	public void allBook() {
		System.out.println("Our books:");
		try {
			resultSet = statement.executeQuery(selectAll);
			while (resultSet.next()) {
				System.out.println("    " + "author: " + resultSet.getString("author") + " name: " + resultSet.getString("name"));
			}
		} catch (SQLException e) {
			System.out.println("fail execute");
		}
	}
	
	public void add(String command) {
		preparedStatement = worker.getConnection().prepareStatement(insert);

		Pattern pattern = Pattern.compile("(\\w+)\\s+(.+)\\s+\"(.+)\"");

		Matcher matcher = pattern.matcher(command);
		if (matcher.matches()) {
			String command = matcher.group(1);
			String author = matcher.group(2);
			String book = matcher.group(3);

			preparedStatement.setString(2, author);
			preparedStatement.setString(1, book);

			preparedStatement.execute();
			System.out.println("book " + author + " " + book + " was added");
		}
	}
	
	public void edit() {
		
	}
	
	public void remove() {
		
	}
	
}
