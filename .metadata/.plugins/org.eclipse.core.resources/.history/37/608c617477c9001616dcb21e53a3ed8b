package library;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import dbworker.DBWorker;

public class Library {
	private String insert = "INSERT INTO users (name, author) VALUES(?,?)";
	private String select = "select * from users where name = ?";
	private String selectAll = "select * from users";
	
	private DBWorker worker;
	private PreparedStatement preparedStatement;
	private ResultSet resultSet;
	private Statement statement;
	private Scanner in = new Scanner(System.in);
	
	public Library() {
		worker = new DBWorker();
		try {
			statement = worker.getConnection().createStatement();
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Fail connection");
		}
	}
	
	public void allBook() {
		System.out.println("Our books:");
		try {
			resultSet = statement.executeQuery(selectAll);
			while (resultSet.next()) {
				System.out.println("    " + "author: " + resultSet.getString("author") + " name: " + resultSet.getString("name"));
			}
		} catch (SQLException e) {
			System.out.println("fail execute");
		}
	}
	
	public void add(String command) {
		try {
			preparedStatement = worker.getConnection().prepareStatement(insert);
			
			Pattern pattern = Pattern.compile("(\\w+)\\s+(.+)\\s+\"(.+)\"");
			
			Matcher matcher = pattern.matcher(command);
			if (matcher.matches()) {
				String author = matcher.group(2);
				String book = matcher.group(3);
				
				preparedStatement.setString(2, author);
				preparedStatement.setString(1, book);
				
				preparedStatement.execute();
				System.out.println("book " + author + " " + book + " was added");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Fail execute");
		}
	}
	
	public void edit(String command) {
		try {
			preparedStatement = worker.getConnection().prepareStatement(select);
			
			Pattern pattern = Pattern.compile("(\\w+)\\s+(.+)");
			
			Matcher matcher = pattern.matcher(command);
			if (matcher.matches()) {
				String book = matcher.group(2);
				
				preparedStatement.setString(1, book);
				resultSet = preparedStatement.executeQuery();
				
				resultSet.last();
				if (resultSet.getRow() != 0) {
					
					if (resultSet.getRow() > 1) {
						int temp = 1;
						ArrayList<Integer> id = new ArrayList<Integer>();
						
						resultSet.beforeFirst();
						
						while (resultSet.next()) {
							id.add(Integer.valueOf(resultSet.getInt("id")));
							System.out.println(temp + ".   " + resultSet.getString("author") + " \""
									+ resultSet.getString("name") + "\"");
							temp += 1;
						}
						System.out.print("Please select number ");
						int number = in.nextInt() - 1;
						in.nextLine();
						System.out.print("Please enter name for your book ");
						statement.executeUpdate("update users set name = '" + in.nextLine() +  "'  where id = " + id.get(number));
					} else {
						System.out.print("Please enter name for your book ");
						statement.executeUpdate("update users set name = '" + in.nextLine() + "' where name = '" + book + "';");
					}
					System.out.println("book " + book + " was edited");
				} else {
					System.out.println("you don't have this book");
				}
			} 
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void remove(String command) {
		try {
			preparedStatement = worker.getConnection().prepareStatement(select);
			
			Pattern pattern = Pattern.compile("(\\w+)\\s+(.+)");
			Matcher matcher = pattern.matcher(command);
			
			if (matcher.matches()) {
				String book = matcher.group(2);
				
				preparedStatement.setString(1, book);
				resultSet = preparedStatement.executeQuery();
				
				resultSet.last();
				if (resultSet.getRow() != 0) {
					
					if (resultSet.getRow() > 1) {
						int temp = 1;
						ArrayList<Integer> id = new ArrayList<Integer>();
						
						resultSet.beforeFirst();
						
						while (resultSet.next()) {
							id.add(Integer.valueOf(resultSet.getInt("id")));
							System.out.println(temp + ".   " + resultSet.getString("author") + " \""
									+ resultSet.getString("name") + "\"");
							temp += 1;
						}
						statement.executeUpdate("delete from users where id = " + id.get(in.nextInt() - 1));
					} else {
						statement.executeUpdate("delete from users where name = '" + book + "';");
					}
					System.out.println("book " + book + " was removed");
				} else {
					System.out.println("you don't have this book");
				}
			} 
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Fail execute");
		}

	}
	
}
