package main;

import java.net.Socket;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

	private static final String INSERT_NEW = "INSERT INTO users (name, author) VALUES(?,?)";
	private static final String SELECT = "select * from users where name = ?";

	public static void main(String[] args) throws InterruptedException {
		DBWorker worker = new DBWorker();
		PreparedStatement preparedStatement = null;
		String query = "select * from users";
		
		System.out.println("Download library package");
		
		for(int i = 0; i < 101; i += 20) {
			
			System.out.println(i + "%");
			Thread.sleep(300);
		}
		System.out.println("Download Successful\nReady to work");
		
		
		try {
			Statement statement = worker.getConnection().createStatement();
			ResultSet resultSet = null;
			Scanner in = new Scanner(System.in);

			while (true) {
				String value = in.nextLine();

				if (value.equals("all books")) {
					System.out.println("Our books:");
					resultSet = statement.executeQuery(query);
					while (resultSet.next()) {
						System.out.println("    " + "author: " + resultSet.getString("author") + " name: " + resultSet.getString("name"));
					}
				} else if (value.startsWith("add ")) {
					preparedStatement = worker.getConnection().prepareStatement(INSERT_NEW);

					Pattern pattern = Pattern.compile("(\\w+)\\s+(.+)\\s+\"(.+)\"");

					Matcher matcher = pattern.matcher(value);
					if (matcher.matches()) {
						String command = matcher.group(1);
						String author = matcher.group(2);
						String book = matcher.group(3);

						preparedStatement.setString(2, author);
						preparedStatement.setString(1, book);

						preparedStatement.execute();
						System.out.println("book " + author + " " + book + " was added");
					}
				} else if (value.startsWith("remove ")) {
					preparedStatement = worker.getConnection().prepareStatement(SELECT);

					Pattern pattern = Pattern.compile("(\\w+)\\s+(.+)");

					Matcher matcher = pattern.matcher(value);
					if (matcher.matches()) {
						String command = matcher.group(1);
						String book = matcher.group(2);

						preparedStatement.setString(1, book);
						resultSet = preparedStatement.executeQuery();

						resultSet.last();
						if (resultSet.getRow() != 0) {

							if (resultSet.getRow() > 1) {
								int temp = 1;
								ArrayList<Integer> id = new ArrayList<Integer>();

								resultSet.beforeFirst();

								while (resultSet.next()) {
									id.add(Integer.valueOf(resultSet.getInt("id")));
									System.out.println(temp + ".   " + resultSet.getString("author") + " \""
											+ resultSet.getString("name") + "\"");
									temp += 1;
								}
								statement.executeUpdate("delete from users where id = " + id.get(in.nextInt() - 1));
							} else {
								statement.executeUpdate("delete from users where name = '" + book + "';");
							}
							System.out.println("book " + book + " was removed");
						} else {
							System.out.println("you don't have this book");
						}
					} 

				} else if (value.startsWith("edit")) {
					preparedStatement = worker.getConnection().prepareStatement(SELECT);

					Pattern pattern = Pattern.compile("(\\w+)\\s+(.+)");

					Matcher matcher = pattern.matcher(value);
					if (matcher.matches()) {
						String command = matcher.group(1);
						String book = matcher.group(2);

						preparedStatement.setString(1, book);
						resultSet = preparedStatement.executeQuery();

						resultSet.last();
						if (resultSet.getRow() != 0) {

							if (resultSet.getRow() > 1) {
								int temp = 1;
								ArrayList<Integer> id = new ArrayList<Integer>();

								resultSet.beforeFirst();

								while (resultSet.next()) {
									id.add(Integer.valueOf(resultSet.getInt("id")));
									System.out.println(temp + ".   " + resultSet.getString("author") + " \""
											+ resultSet.getString("name") + "\"");
									temp += 1;
								}
								System.out.print("Please select number ");
								int number = in.nextInt() - 1;
								in.nextLine();
								System.out.print("Please enter name for your book ");
								statement.executeUpdate("update users set name = '" + in.nextLine() +  "'  where id = " + id.get(number));
							} else {
								System.out.print("Please enter name for your book ");
								statement.executeUpdate("update users set name = '" + in.nextLine() + "' where name = '" + book + "';");
							}
							System.out.println("book " + book + " was edited");
						} else {
							System.out.println("you don't have this book");
						}
					} 
				}
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
}
